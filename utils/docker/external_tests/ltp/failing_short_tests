bind01     # bind on invalid pointer
chdir04    # chdir on invalid pointer
chroot03   # unsupported syscall, chroot on invalid pointer
creat07    # multiprocess
dup05      # mkfifo
dup203     # fcntl F_GETFD
dup205     # assert in libpmemfile, too many fds?
dup3_01    # dup3(O_CLOEXEC)
execl01    # multiprocess?
execlp01   # multiprocess?
execv01    # multiprocess?
execve04   # mmap
execvp01   # multiprocess?
fcntl01    # fcntl(F_GETFD) returns unexpected O_CLOEXEC
fcntl01_64 # fcntl(F_GETFD) returns unexpected O_CLOEXEC
fcntl07    # mkfifo
fcntl07_64 # mkfifo
fcntl11    # advisory record locks
fcntl11_64 # advisory record locks
fcntl14    # advisory record locks
fcntl14_64 # advisory record locks
fcntl17    # advisory record locks
fcntl17_64 # advisory record locks
fcntl19    # advisory record locks
fcntl19_64 # advisory record locks
fcntl20    # advisory record locks
fcntl20_64 # advisory record locks
fcntl21    # advisory record locks
fcntl21_64 # advisory record locks
fcntl22    # advisory record locks
fcntl22_64 # advisory record locks
fcntl23    # leases
fcntl23_64 # leases
fcntl24    # leases
fcntl24_64 # leases
fcntl25    # leases
fcntl25_64 # leases
fcntl26    # leases
fcntl26_64 # leases
fcntl32    # leases
fcntl32_64 # leases
fcntl34    # OFD locks
fcntl34_64 # OFD locks
flock01    # flock
flock02    # flock
flock03    # mmap
flock04    # flock
flock05    # flock
flock06    # flock, mmap
fork10     # ?
getcwd03   # double free or corruption
getrusage03 # multiprocess?
test_ioctl # multiprocess?
inotify01  # inotify_add_watch
inotify04  # inotify_add_watch
inotify05  # inotify_add_watch
symlink01 -T link01 # something about lstat and st_ino
link04     # link("", ...) and link for invalid pointer
linkat01   # mkfifo
llseek01   # "write successful after file size limit"
llseek02   # invalid errno for lseek with invalid whence
lseek03    # invalid errno for lseek with invalid whence
lseek04    # mkfifo
lseek10    # mknod
mkdir01    # mkdir for invalid pointer
mkdir09    # mkdir with mode=07770 fails
mmap001 -m 1
mmap01
mmap02
mmap03
mmap04
mmap05
mmap06
mmap07
mmap09
mmap12
mmap13
mremap01
msync01
msync02
msync03
munmap01
munmap02
nftw01     # ?
nftw6401   # ?
open06     # mknod
open07     # open(O_NOFOLLOW) fails when it shouldn't
open13     # fgetxattr succeeds when it shouldn't
openat02   # open(O_APPEND) + lseek
mincore01  # mmap
mincore02  # mmap
preadv01   # preadv fails with EFAULT
preadv01_64
pwrite02   # pwrite on invalid pointer
pwrite02_64
pwritev01  # pwritev fails with EFAULT
pwritev01_64
pwritev02  # pwritev fails with wrong errnos, crash with invalid pointer
pwritev02_64
read02     # read fails with wrong errnos, crash with invalid pointer
read03     # mknod
readlinkat02 # readlinkat succeeds unexpectedly
readv01    # "readv failed reading 64 bytes, followed by two NULL vectors"
readv02    # readv succeeds when it shouldn't, also SIGABRTs
recvmsg01  # bind not supported(?)
remap_file_pages02 # mmap
rename08   # rename for invalid pointers
rmdir05    # rmdir for invalid pointer
select03   # mkfifo
sendfile02 # sendfile fails
sendfile02_64
sendfile04
sendfile04_64
sendfile05
sendfile05_64
sendfile06
sendfile06_64
sendfile07
sendfile07_64
sendfile08
sendfile08_64
signal06    # ?
sockioctl01 # mknod
splice01    # splice not supported
seq 1 20000 | splice02 splice02-temp # multiprocess?
splice03    # splice not supported
tee01       # splice not supported
stat06      # stat("") returns wrong errno
stat06_64
fstatfs02   # fstatfs for invalid buffer
fstatfs02_64
statfs02    # statfs returns ENOENT
statfs02_64
statvfs02   # statvfs crashes on NULL pointer
symlinkat01 # symlinkat fails when it shouldn't
unlink06    # mkfifo
unlink07    # unlink("") fails with wrong errno, unlink for invalid pointer
unlinkat01  # unlinkat fails with invalid errno
vmsplice01  # splice not supported
write03     # write for invalid pointer
write04     # mknod
write05     # write for invalid pointer
writev01    # writev returns wrong errno
writev07    # writev for invalid pointer
memfd_create01 # ?
#growfiles -W gf27 -b -D 0 -w -g 8b -C 1 -b -i 1000 -u -f gfsparse-1-$$ -d $TMPDIR
#growfiles -W gf28 -b -D 0 -w -g 16b -C 1 -b -i 1000 -u -f gfsparse-2-$$ -d $TMPDIR
rwtest -N rwtest05 -c -q -i 50 -T 64b 500b:$TMPDIR/rwtest01%f # multiprocess?
